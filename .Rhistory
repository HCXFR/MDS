set.seed(123)
resboot <- bootmds(fit, data=df, method.dat="euclidean", nrep=500)
plot(resboot, main="", xlab="", ylab="", col.axis = "white", ell=list(lty=1,
col="black", cex=2, label.conf=list(label=TRUE, pos=3, col=1, cex=1.5)))
par(op)
#4. FINAL MODEL
title1 <- "xxxxx"
#if Torgerson
cc <- data.frame(DF1); tit<-""; fitbi <- biplotmds(res, cbind(exx, exy,exz))
#if reandom
cc <- data.frame(DF2); tit<-""; fitbi <- biplotmds(res2, cbind(exx, exy,exz))
ab <-fitbi$coefficients; source("plot_TvsR.R");sp
p <-ggplot(W, aes(X1, X2)) +
geom_label_repel(label=levels(dd$subject), size=5)
# 3 D MODEL
source("3Dplot.R")
di <-3
ifelse(di==3, print(p3), grid.arrange(sp, top=title1))
dm <- "D2"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
dm <- "D3"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp2 <-sp
#enter yoru title
grid.arrange(sp1, sp2, nrow = 1, top=title1)
##DISTANCE?
dat <-"cooccur.csv"
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
source("1.2.scree.R")
shiny::runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
View(zz)
zz<<-gg %>% map(~as.matrix(vegdist(t(.x), method = mtd, binary =bi, diag=T, upper=T)))
##DISTANCE?
dat <-"cooccur.csv"
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
runApp('~/mds')
zz <<-gg %>% map(~as.matrix(vegdist(t(.x), method = mtd, binary =bi, diag=T, upper=T)))
nms<- names(gg[[1]])
for (i in seq_along(zz)){
colnames(zz[[i]]) <- nms
}
for (i in seq_along(zz)){
rownames(zz[[i]]) <- nms
}
df <-data.frame(Reduce(`+`, zz)/length(zz)) #this takes an average of a list
runApp('~/mds')
runApp('~/mds')
for (i in seq_along(zz)){
colnames(zz[[i]]) <- nms
}
nms<- names(gg[[1]])
for (i in seq_along(zz)){
colnames(zz[[i]]) <- nms
}
for (i in seq_along(zz)){
rownames(zz[[i]]) <- nms
}
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
##DISTANCE?
dat <-"cooccur.csv"
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
runApp('~/mds')
##DISTANCE?
dat <-"cooccur.csv"
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
##DISTANCE?
dat <-"cooccur.csv"
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
runApp('~/mds')
View(gg)
runApp('~/mds')
runApp('~/mds')
View(df)
View(zz)
install.packages("popbio")
library(popbio)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
###1.  DATA
setwd("~/Desktop/md2v2/mds/")
##DISTANCE?
dat <-"cooccur.csv"
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
##DISTANCE?
dat <-"cooccur.csv"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
title1=textGrob("Screeplot", gp=gpar(fontface="bold"))
grid.arrange(p,  nrow = 1, top=title1)
#2.2  icexplore
#ndim?
di <-3
nr <- 20
source("1.2.icexp.R")
grid.arrange(p2)
source("1.1.int_row.R")
#method? choose from "pearson", "kendall", "spearman")
mtd<-"pearson"
source("1.1.int_row.R")
##DISTANCE?
dat <-"cooccur.csv"
#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski",
# "jaccard", "gower", "altGower", "morisita",
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
source("1.1.dist.row.R") #row
#col or row?
source("1.1.dist.col.R") #col
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
View(fit)
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
#1.1 direct?
dat <-"kinship.csv"
source("1.dat.R")
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
title1=textGrob("Screeplot", gp=gpar(fontface="bold"))
grid.arrange(p,  nrow = 1, top=title1)
#2.2  icexplore
#ndim?
di <-3
nr <- 20
source("1.2.icexp.R")
#which init conf?
x <-11
confi <-res0$mdsfit[[x]]$conf
#mds
source("2.mds.R")
#2.3 DRAW Torgerson vs configurations ?
#external grpus ?
#yes
groups <- groups
#do yoiu have external scales?
#if yes, names?
aa <- "gender"
ac <- "degree"
ad <- "generation"
#plot D1 vs ?
dm <- "D2"
cc <- data.frame(DF1); tit <- "Torgerson";fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
cc <- data.frame(DF2);tit <- "Random";fitbi <- biplotmds(res2, cbind(exx, exy,exz));
ab <-fitbi$coefficients;source("plot_TvsR.R");sp2 <-sp
grid.arrange(sp1, sp2, nrow = 1)
# 3 D MODEL
source("3Dplot.R")
di <-3
ifelse(di==3, print(p3), grid.arrange(sp, top=title1))
dm <- "D2"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
cl <-4
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
dm <- "D3"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp2 <-sp
#enter yoru title
grid.arrange(sp1, sp2, nrow = 1, top=title1)
# 3 D MODEL
source("3Dplot.R")
runApp('~/mds')
###1.  DATA
setwd("~/Desktop/md2v2/mds/")
#1.1 direct?
dat <-"kinship.csv"
source("1.dat.R")
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
title1=textGrob("Screeplot", gp=gpar(fontface="bold"))
grid.arrange(p,  nrow = 1, top=title1)
#2.2  icexplore
#ndim?
di <-3
nr <- 20
source("1.2.icexp.R")
#which init conf?
x <-11
confi <-res0$mdsfit[[x]]$conf
#mds
source("2.mds.R")
cl <-4
#do yoiu have external scales?
#if yes, names?
aa <- "gender"
ac <- "degree"
ad <- "generation"
#plot D1 vs ?
dm <- "D2"
cc <- data.frame(DF1); tit <- "Torgerson";fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
cc <- data.frame(DF2);tit <- "Random";fitbi <- biplotmds(res2, cbind(exx, exy,exz));
ab <-fitbi$coefficients;source("plot_TvsR.R");sp2 <-sp
grid.arrange(sp1, sp2, nrow = 1)
#your model
#if torgerson
fit <- res
#if Torgerson
cc <- data.frame(DF1); tit<-""; fitbi <- biplotmds(res, cbind(exx, exy,exz))
ab <-fitbi$coefficients; source("plot_TvsR.R");sp
# 3 D MODEL
source("3Dplot.R")
di <-3
ifelse(di==3, print(p3), grid.arrange(sp, top=title1))
dm <- "D2"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
dm <- "D3"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp2 <-sp
#enter yoru title
grid.arrange(sp1, sp2, nrow = 1, top=title1)
ifelse(di==3, print(p3), grid.arrange(sp, top=title1))
di <-2
ifelse(di==3, print(p3), grid.arrange(sp, top=title1))
runApp('~/mds')
runApp('~/mds')
#1.1 direct?
dat <-"kinship.csv"
source("1.dat.R")
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
#2.2  icexplore
#ndim?
di <-3
nr <- 20
source("1.2.icexp.R")
#which init conf?
x <-11
confi <-res0$mdsfit[[x]]$conf
#mds
source("2.mds.R")
#do yoiu have external scales?
#if yes, names?
aa <- "gender"
ac <- "degree"
ad <- "generation"
#plot D1 vs ?
dm <- "D2"
cl <-4
cc <- data.frame(DF1); tit <- "Torgerson";fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
cc <- data.frame(DF2);tit <- "Random";fitbi <- biplotmds(res2, cbind(exx, exy,exz));
ab <-fitbi$coefficients;source("plot_TvsR.R");sp2 <-sp
grid.arrange(sp1, sp2, nrow = 1)
#do you want another model than MDS
#if indscal
source("3.indscal.R")
p <-ggplot(W, aes(X1, X2)) +
geom_label_repel(label=levels(dd$subject), size=5)
pp <-  grid.arrange(sp, p, nrow = 2, top=title1)
#4. FINAL MODEL
title1 <- "xxxxx"
pp <-  grid.arrange(sp, p, nrow = 2, top=title1)
p <-ggplot(W, aes(X1, X2)) +
geom_label_repel(label=levels(dd$subject), size=5)
pp <-  grid.arrange(sp, p, nrow = 2, top=title1)
p1 <-ggplot(W, aes(X1, X2)) +
geom_label_repel(label=levels(dd$subject), size=5)
p2 <-ggplot(W, aes(X1, X3)) +
geom_label_repel(label=levels(dd$subject), size=5)
grid.arrange(sp1, sp2, p1, p2, nrow = 2, top=title1)
# 3 D MODEL
source("3Dplot.R")
di <-2
ifelse(di==3, print(p3), grid.arrange(sp, top=title1))
dm <- "D2"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
dm <- "D3"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp2 <-sp
#enter yoru title
grid.arrange(sp1, sp2, nrow = 1, top=title1)
p1 <-ggplot(W, aes(X1, X2)) +
geom_label_repel(label=levels(dd$subject), size=5)
p2 <-ggplot(W, aes(X1, X3)) +
geom_label_repel(label=levels(dd$subject), size=5)
grid.arrange(sp1, sp2, p1, p2, nrow = 2, top=title1)
# 3 D MODEL
source("3Dplot.R")
#if Torgerson
cc <- data.frame(DF1); tit<-""; fitbi <- biplotmds(res, cbind(exx, exy,exz))
#if reandom
cc <- data.frame(DF2); tit<-""; fitbi <- biplotmds(res2, cbind(exx, exy,exz))
ab <-fitbi$coefficients; source("plot_TvsR.R");sp
p <-ggplot(W, aes(X1, X2)) +
geom_label_repel(label=levels(dd$subject), size=5)
pp <-  grid.arrange(sp, p, nrow = 2, top=title1)
runApp('~/mds')
dm <- "D2"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
dm <- "D3"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp2 <-sp
#enter yoru title
grid.arrange(sp1, sp2, nrow = 1, top=title1)
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
View(W)
#1.1 direct?
dat <-"kinship.csv"
source("1.dat.R")
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
#2.2  icexplore
#ndim?
di <-3
nr <- 20
source("1.2.icexp.R")
#which init conf?
x <-11
confi <-res0$mdsfit[[x]]$conf
#do you want another model than MDS
#if indscal
source("3.indscal.R")
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
runApp('~/mds')
colnames(RepErr) <- rnms
rownames(RepErr) <- rnms
View(RepErr)
#######if indscal or idioscal
dh <-fit$dhat
dh <-dh %>% map(~as.matrix(.x))
dha <-data.frame(Reduce(`+`, dh)/length(dh)) #this takes an average of a list
dco <-fit$confdist
dco <-dco %>% map(~as.matrix(.x))
dco <-data.frame(Reduce(`+`, dco)/length(dco)) #this takes an average of a list
rnms<-rownames(res$gspace)
#if idioscal
source("4.idio.R")
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
#2.2  icexplore
#ndim?
di <-3
#if idioscal
source("4.idio.R")
#which init conf?
x <-11
confi <-res0$mdsfit[[x]]$conf
#if idioscal
source("4.idio.R")
#GRAVITY?
dat <-"GOP.csv"
source("1.1.gravity.R")
#### 2 EXPLORE
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
#2.2  icexplore
#ndim?
di <-3
nr <- 20
source("1.2.icexp.R")
#which init conf?
x <-11
confi <-res0$mdsfit[[x]]$conf
#mds
source("2.mds.R")
#if idioscal
source("4.idio.R")
shiny::runApp()
txt <- paste("stress= ",round(fit$stress, digits=3 ) , sep = "")
plot(fit, plot.type = "Shepard", main = "Shepard Diagram", sub=txt,cex=1.5 )
set.seed(1234)
res.perm <- permtest(fit, nrep =200, verbose = FALSE)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
