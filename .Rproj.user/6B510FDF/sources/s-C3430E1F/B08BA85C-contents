library(smacof)
library(tidyverse)
library(ggrepel)
library(gridExtra)
library(goeveg)
library(devtools)
#devtools::install_github("cmartin/ggConvexHull")
library(ggConvexHull)
library(ggpubr)
library("grid")
library("ggplotify")
library(ggfortify)

###1.  DATA
setwd("~/Desktop/md2v2/mds/")

#1.1 direct?
dat <-"kinship.csv"
source("1.dat.R")
#1.2 indirect?
##NOMINAL?
dat <-"farms.csv"
#method? can select from chuprov, g,  mutual, variation, 
mtd <- "chuprov" # 
source("1.1.nomin.R") #col

##DISTANCE?
dat <-"cooccur.csv"

#method? choose from "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski", 
# "jaccard", "gower", "altGower", "morisita", 
# "horn", "mountford", "raup", "binomial", "chao", "cao" or "mahalanobis".
mtd <-"jaccard"
#binary?gets T or F values
bi <-T
#col or row?
source("1.1.dist.col.R") #col
source("1.1.dist.row.R") #row

#SIMILARITY? 
dat <-"topmat2.csv"
#method? choose from "pearson", "kendall", "spearman")
mtd<-"pearson"
#col or row?
source("1.1.int_col.R")
source("1.1.int_row.R") 

#GRAVITY?
dat <-"GOP.csv"
source("1.1.gravity.R") 

#### 2 EXPLORE    
#2.1 screeplot
ty <-"ordinal"
tie<- "primary"
source("1.2.scree.R")
title1=textGrob("Screeplot", gp=gpar(fontface="bold"))
grid.arrange(p,  nrow = 1, top=title1)
#2.2  icexplore   
#ndim?
di <-3
nr <- 20
source("1.2.icexp.R")
grid.arrange(p2)

#which init conf?
x <-11
confi <-res0$mdsfit[[x]]$conf

#mds
source("2.mds.R")

#2.3 DRAW Torgerson vs configurations ?
#external grpus ?
#yes
groups <- groups

cl <-4
#do yoiu have external scales?
#if yes, names?
aa <- "gender"
ac <- "degree"
ad <- "generation"
#plot D1 vs ?
dm <- "D2"
cc <- data.frame(DF1); tit <- "Torgerson";fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
cc <- data.frame(DF2);tit <- "Random";fitbi <- biplotmds(res2, cbind(exx, exy,exz));
ab <-fitbi$coefficients;source("plot_TvsR.R");sp2 <-sp
grid.arrange(sp1, sp2, nrow = 1)

#3. DIAGNOSTICS


#do you want another model than MDS
#if indscal
source("3.indscal.R")
#if idioscal
source("4.idio.R")

#your model
#if torgerson
fit <- res
#if random
fit <-res2

#3.1 shepard plot
op <- par(mfrow = c(1,2))
par(cex=1.2)
txt <- paste("stress= ",round(fit$stress, digits=3 ) , sep = "")
plot(fit, plot.type = "Shepard", main = "Shepard Diagram", sub=txt,cex=1.5 )
#3.2. permutation test:  dont do if indscal or idioscal
set.seed(1234)
res.perm <- permtest(fit, nrep =200, verbose = FALSE)
plot(res.perm)
par(op)

#3.2 stress per point 
par(cex=1.2)
p1 <-as.grob(~plot(fit, plot.type = "stressplot"))
#dont do for indscal
library(gplots)
#if mds
RepErr <-as.matrix((fit$dhat-fit$confdist)^2)

#######if indscal or idioscal
dh <-fit$dhat
dh <-dh %>% map(~as.matrix(.x))
dha <-data.frame(Reduce(`+`, dh)/length(dh)) #this takes an average of a list
dco <-fit$confdist
dco <-dco %>% map(~as.matrix(.x))
dco <-data.frame(Reduce(`+`, dco)/length(dco)) #this takes an average of a list
rnms<-rownames(res$gspace)
RepErr <-as.matrix(unlist((dha-dco)^2))
colnames(RepErr) <- rnms
rownames(RepErr) <- rnms
#########


yr <- colorRampPalette(c("lightyellow", "red"), space = "rgb")(100)
p2 <-as.grob(~heatmap.2(RepErr, cellnote=round(RepErr,2), Rowv = NA, Colv = "Rowv", lhei=c(0.05, .15),
                        margins = c(8, 8), key=FALSE, notecol = "black", 
                        trace = "none", col = yr, symm = TRUE, dendrogram = "none") )
grid.arrange( p1,p2, nrow = 1)

#3.3 stability
#not applicable for indscal idioscal
op <- par(mfrow = c(1,2))
JK <-jackknife(fit)
plot(JK)
set.seed(123)
resboot <- bootmds(fit, data=df, method.dat="euclidean", nrep=500)
plot(resboot, main="", xlab="", ylab="", col.axis = "white", ell=list(lty=1,
                                                                      col="black", cex=2, label.conf=list(label=TRUE, pos=3, col=1, cex=1.5)))
par(op)


#4. FINAL MODEL
title1 <- "xxxxx"
#if Torgerson
cc <- data.frame(DF1); tit<-""; fitbi <- biplotmds(res, cbind(exx, exy,exz))
#if reandom
cc <- data.frame(DF2); tit<-""; fitbi <- biplotmds(res2, cbind(exx, exy,exz))

ab <-fitbi$coefficients; source("plot_TvsR.R");sp
#if indscal add this

p <-ggplot(W, aes(X1, X2)) +
  geom_label_repel(label=levels(dd$subject), size=5)
pp <-  grid.arrange(sp, p, nrow = 2, top=title1)

# 3 D MODEL
source("3Dplot.R")
di <-2
ifelse(di==3, print(p3), grid.arrange(sp, top=title1))
dm <- "D2"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp1 <-sp
dm <- "D3"
cc <- data.frame(DF1); fitbi <- biplotmds(res, cbind(exx, exy,exz));
ab <-fitbi$coefficients; source("plot_TvsR.R");sp2 <-sp
#enter yoru title
grid.arrange(sp1, sp2, nrow = 1, top=title1)

#if indscal; add to the above

p1 <-ggplot(W, aes(X1, X2)) +
  geom_label_repel(label=levels(dd$subject), size=5)
p2 <-ggplot(W, aes(X1, X3)) +
  geom_label_repel(label=levels(dd$subject), size=5)
grid.arrange(sp1, sp2, p1, p2, nrow = 2, top=title1)
